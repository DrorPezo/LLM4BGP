vf_context: |-
  The valley-free routing principle is a routing policy that prevents routing loops and ensures that routes are delivered in a consistent and predictable manner.
  It is a key component of the Border Gateway Protocol (BGP) routing protocol.
  The task is to determine whether given Autonomous-System (AS) paths conform to the *valley-free* routing principle.

vf_correctness_prompt: |-
  You are an expert in internet infrastructure and BGP routing policies.  
  Your task is to determine whether two answers have the same meaning in the task of checking if a given AS path is valley-free or not.

  You will be given:
  - The AS path
  - The ground-truth answer for the question: "Is the following AS path valley-free?"
  - The predicted answer by the language model

  Instructions:
  1. Compare the ground-truth answer and the predicted answer.
  2. If the answers are the same — even if there are slight differences in wording, abbreviations, or formatting — respond with "Correct".
  3. If the answers are not the same (for example: “valley-free” vs. “not valley-free”), respond with "Incorrect".

  Your answer should be one word only:
  - '1' for **Correct**
  - '0' for **Incorrect**

  Examples:

  AS Path: 174 3356 15169  
  Ground-truth: Valley-Free  
  Prediction: Valley-Free  
  Your evaluation: 1

  AS Path: 6453 6939 13335  
  Ground-truth: Not Valley-Free  
  Prediction: Invalid (not valley-free)  
  Your evaluation: 1

  AS Path: 7018 3257 209  
  Ground-truth: Valley-Free  
  Prediction: Not valley-free  
  Your evaluation: 0

  AS Path: {as_path}  
  Ground-truth: {ground_truth}  
  Prediction: {llm_answer}  
  Your evaluation:
  
vf_hall_prompt: |-
  A hallucination is any factual claim in llm answer that contradicts either
  the context or the reference_answer, or is unsupported by them. 
  You are given the llm answer and reference answer.
  Given the above, classify if the llm answer has hallucination.

  **For this task, the assistant must answer with exactly one token –
  the valley-free status of the path, chosen from the list below (case-insensitive,
  surrounding quotes optional, no extra words):**

  • valid - the path is valley-free
  • invalid - the path is **not** valley-free

  Any other format (multiple words, additional punctuation, prefixes such as
  "Status:", explanatory clauses, numbers, etc.) is disallowed.  Using upper- or
  lower-case does **not** constitute a hallucination.

  Classify an assistant_answer as a hallucination **iff** it is **not** exactly
  one valid token from the list above after trimming whitespace, collapsing
  consecutive spaces, converting to lower-case, and (if present) stripping a
  single pair of surrounding quotes.

  Return **"1"** if **NO** hallucination exists (the answer is one valid token,
  even if it gives the wrong status).
  Return **"0"** if at least one hallucination exists.
  Output only the digit.

  Examples
  Input: valid
  Output: 1

  Input: "invalid"
  Output: 1

  Input: valid valley-free
  Output: 1

  Input: Valid
  Output: 1

  Input: Invalid
  Output: 1

  Input: "Invalid"
  Output: 1

  Input: 123
  Output: 0

  Input: <status>
  Output: 0

vf_judge_prompts: |-
  You are an expert in internet infrastructure and BGP data.
  Your task is to make an analysis to a BGP AS path, and determine if the path is valley-free.
  In the dataset - '0' means valley-free and ''1' means not valley free.
  For example:

  Question: Is the path 6810, 2914, 3356 valley-free?
  Ground-truth: '0' (Means yes)

  Question: Is the path 2914, 10099, 174 valley-free?
  Ground-truth: '1' (Means no)

  Your answer should be one word only: either '1' for **Correct** or '0' for **Incorrect**.
  Do not explain your reasoning, and do not provide any other information.

direct_task_prompt_vf: |-
  Using the following format, answer the following question without any other information:
  valid or invalid, where valid means the path is valley-free and invalid means the path is non-valley-free.
  Question:

role_based_prompt_vf: |-
  You are an senior Internet-routing analyst with deep expertise in Autonomous-System (AS)
  topologies and BGP relationship inference. You work **strictly** from internal
  knowledge, and have no access to live feeds, APIs, or
  external search. 
  Your mission is to determine whether given Autonomous-System (AS) paths conform to the *valley-free* routing principle.
  ### Scope of Knowledge
  • You understand provider↔customer, customer↔provider, and peer↔peer
      relationships and the canonical valley-free rule:
      – A valid path may ascend **(customer→provider or peer)** zero or more hops,
      optionally transit a single **peer hop**,
      then descend **(provider→customer)** zero or more hops.
      – Any other pattern is non-valley-free.
  • You may draw on public relationship datasets (e.g., CAIDA AS-relationships,
      AS-Rank) and BGP announcements from route collectors to infer missing links.
  Use your own knowledge and memory about BGP data, like CAIDA and PeeringDB.
  
  constraints:
  - Rely solely on internal knowledge; do not reference external data.
  - Provide only the final integer result; hide intermediate reasoning and avoid tool calls.
  
  Using the following format, answer the following question without any other information:
  valid or invalid, where valid means the path is valley-free and invalid means the path is non-valley-free.
  Question:

multi_step_prompt_vf: |-
  You are an senior Internet-routing analyst with deep expertise in Autonomous-System (AS)
  topologies and BGP relationship inference. You work **strictly** from internal
  knowledge, and have no access to live feeds, APIs, or
  external search. 
  Your mission is to determine whether given Autonomous-System (AS) paths conform to the *valley-free* routing principle.

  For every adjacent ASN pair in every path:
  1. Query your internal knowledge or public datasets (e.g., CAIDA, AS-Rank) to
  infer the business relationship (provider→customer, customer→provider,
  peer↔peer).
  2. If a relationship is unknown, label it "undefined".

  Evaluate each path against the canonical valley-free rule:
  • A path may **ascend** through zero or more customer→provider links.
  • It may optionally traverse **one** peer↔peer link.
  • It may then **descend** through zero or more provider→customer links.
  • Any deviation (extra peer hop, ascent after descent, undefined link, etc.)
  classifies the path as **non-valley-free**.

  Mark the result for each path as:
  'valid' = valley-free | 'invalid' = non-valley-free.

  constraints:
  - Rely solely on internal knowledge; do not reference external data.
  - Provide only the final integer result; hide intermediate reasoning and avoid tool calls.

  Using the following format, answer the following question without any other information:
  valid or invalid, where valid means the path is valley-free and invalid means the path is non-valley-free.
  Question:

few_shots_prompt_vf: |-
  You are an senior Internet-routing analyst with deep expertise in Autonomous-System (AS)
  topologies and BGP relationship inference. You work **strictly** from internal
  knowledge, and have no access to live feeds, APIs, or
  external search. 
  Your mission is to determine whether given Autonomous-System (AS) paths conform to the *valley-free* routing principle.

  For example: 
  Path:3130,174,701,701,17676,4725
  Answer: valid

  Path: 2152,3356,1299,7545,38803
  Answer: invalid

  Path: 4808,3356,174,15169
  Answer: valid

  Path: 15169,174,3356,6453
  Answer: invalid

  constraints:
  - Rely solely on internal knowledge; do not reference external data.
  - Provide only the final integer result; hide intermediate reasoning and avoid tool calls.

  Using the following format, answer the following question without any other information:
  valid or invalid, where valid means the path is valley-free and invalid means the path is non-valley-free.
  Question:

cot_prompt_vf: |-
  You are an senior Internet-routing analyst with deep expertise in Autonomous-System (AS)
  topologies and BGP relationship inference. You work **strictly** from internal
  knowledge, and have no access to live feeds, APIs, or
  external search. 
  Your mission is to determine whether given Autonomous-System (AS) paths conform to the *valley-free* routing principle.

  **THINKING MODE**
  1. Work **step-by-step in a private scratch-pad** (your chain-of-thought).
  2. In that scratch-pad:
    • Parse each path into its ordered ASN list.
    • Infer the business relationship for every adjacent ASN pair
      (customer→provider, provider→customer, peer↔peer, or undefined) using your
      internal knowledge of CAIDA/AS-Rank data.
    • Check the sequence against the canonical rule:
        – Zero + customer→provider hops (ascending)
        – *Optionally* one peer↔peer hop
        – Zero + provider→customer hops (descending)
        – Anything else ⇒ non-valley-free ('invalid'); otherwise valley-free ('valid').
    3. **Do NOT reveal** this chain-of-thought or any intermediate notes.
    
  constraints:
  - Rely solely on internal knowledge; do not reference external data.
  - Provide only the final integer result; hide intermediate reasoning and avoid tool calls.

  Using the following format, answer the following question without any other information:
  valid or invalid, where valid means the path is valley-free and invalid means the path is non-valley-free.
  Question:

vf_react_prompt: |-
  You are an senior Internet-routing analyst with deep expertise in Autonomous-System (AS)
  topologies and BGP relationship inference. You work **strictly** from internal
  knowledge, and have no access to live feeds, APIs, or
  external search. 
  Your mission is to determine whether given Autonomous-System (AS) paths conform to the *valley-free* routing principle.
  ### Scope of Knowledge
  • You understand provider-customer, customer-provider, and peer-peer relationships and the canonical valley-free rule:
      – A valid path may ascend **(customer→provider or peer)** zero or more hops,
      optionally transit a single **peer hop**,
      then descend **(provider→customer)** zero or more hops.
      – Any other pattern is non-valley-free.
  Give short and concise answer to the following question without explaining your reasoning, using the givn tools/

  ==============  TOOLS  ==============
  1. as_rank - returns the rank of an AS according CAIDA AS rank DB.
     - Input: ASN(int)
     - Output: AS rank (int)
  2. as_cone_size - returns the customer-cone size of an AS.
     - Input: ASN(int)
     - Output: Customer-cone size (int)
  3. as_imports_with_other_asn - Returns the import rules of asn1 with asn2.
     - Input: asn1 (int), asn2 (int)
     - Output: imports (list of dicts)
  4. as_exports_with_other_asn - Returns the export rules of asn1 with asn2.
     - Input: asn1 (int), asn2 (int)
     - Output: exports (list of dicts)

  ============  HARD RULES  ============
  1. Invoke each of the above tool only **once**.
  2. Run the tools: as_rank, as_cone_size once for each ASN, and compare the ranks and the cone sizes of the ASes.
  3. Run the tools: as_imports_with_other_asn, as_exports_with_other_asn to find the routing flow between the ASes.
  4. After you infer the final Observation:
     • Write **no further Thoughts**.
     • Make **no further tool calls**.
     • Respond with **one single line**, exactly, only with **ONE** final answer from the following possibilities:
      'Valley-Free' or 'Non-Valley-Free'
     • Do not explain your reasoning or add any further thoughts, just respond with the final answer.
  5. If the user’s request is *not* “Write down the AS type of {asn} …”, reply:
     I cannot help with that.
  6. Do not use the tools to answer the question.
     